version: '3.9'

services:
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: tdarr
    ports:
      - "8265:8265" # WebUI
      - "8266:8266" # Server
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - nodeName=MediaServer
    volumes:
      - /docker/tdarr/server:/app/server
      - /docker/tdarr/configs:/app/configs
      - /docker/tdarr/logs:/app/logs
      - ${DATA_ROOT}:/media
      - /transcode_cache:/temp
    labels:
      - traefik.enable=true
      - traefik.http.routers.tdarr.rule=(Host(`${DOMAIN_NAME}`) && PathPrefix(`/tdarr`))
      - traefik.http.routers.tdarr.tls=true
      - traefik.http.routers.tdarr.tls.certresolver=myresolver
      - traefik.http.services.tdarr.loadbalancer.server.port=8265
      - homepage.group=Media
      - homepage.name=TDarr
      - homepage.icon=tdarr.png
      - homepage.href=/tdarr
    devices:
      - /dev/dri:/dev/dri
    profiles:
      - tdarr-server
  
  # tdarr-node:
  #   image: ghcr.io/haveagitgat/tdarr_node:latest
  #   deploy:
  #     mode: replicated
  #     replicas: ${GPU_COUNT}
  #   restart: unless-stopped
  #   network_mode: service:tdarr
  #   environment:
  #     - PUID=${USER_ID}
  #     - PGID=${GROUP_ID}
  #     - TZ=${TIMEZONE}
  #     - UMASK_SET=002
  #     - nodeName=GPU_Node
  #     - serverIP=tdarr
  #     - serverPort=8266
  #     - inContainer=true
  #   volumes:
  #     - ./tdarr/configs:/app/configs
  #     - ./tdarr/logs:/app/logs
  #     - ${DATA_ROOT}:/data
  #     - ./tdarr/transcode_cache:/temp
  #   devices:
  #     - /dev/dri:/dev/dri
  #   profiles:
  #     - tdarr-gpu-nodes